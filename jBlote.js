// Generated by CoffeeScript 1.3.1
(function() {
  var Bloat;

  Bloat = (function() {

    Bloat.name = 'Bloat';

    function Bloat(args) {
      this.raw_html = "";
    }

    Bloat.prototype.literal = function(text) {
      this.raw_html += text;
      return this;
    };

    Bloat.prototype.div = function(options) {
      return open_tag('div', options);
    };

    Bloat.prototype.$div = function() {
      return close_tag('div');
    };

    Bloat.prototype.span = function(options) {
      return open_tag('span', options);
    };

    Bloat.prototype.$span = function() {
      return close_tag('span');
    };

    Bloat.prototype.br = function() {
      return simple_tag('br');
    };

    Bloat.prototype.p = function(options) {
      return open_tag('p', options);
    };

    Bloat.prototype.$p = function() {
      return close_tag('p');
    };

    Bloat.prototype.table = function(options) {
      return open_tag('table', options);
    };

    Bloat.prototype.$table = function() {
      return close_tag('table');
    };

    Bloat.prototype.tr = function(options) {
      return open_tag('tr', options);
    };

    Bloat.prototype.$tr = function() {
      return close_tag('tr');
    };

    Bloat.prototype.td = function(options) {
      return open_tag('td', options);
    };

    Bloat.prototype.$td = function() {
      return close_tag('td');
    };

    Bloat.prototype["export"] = function() {
      return this.raw_html;
    };

    Bloat.simple_tag = function(tag_name) {
      this.raw_html += "<" + tag_name + " />";
      return this;
    };

    Bloat.open_tag = function(tag_name, options) {
      this.raw_html += "<" + tag_name;
      this.raw_html += apply_options(options);
      this.raw_html += ">";
      return this;
    };

    Bloat.close_tag = function(tag_name) {
      this.raw_html += "</" + tag_name + ">";
      return this;
    };

    Bloat.apply_options = function(options) {
      var key, text, value;
      text = "";
      for (key in options) {
        value = options[key];
        text += " " + key + "=\"" + value("\"");
      }
      return text;
    };

    Bloat.null_or_empty = function(x) {
      return x === null || x === "" || x === void 0;
    };

    return Bloat;

  })();

  window.Bloat = Bloat;

}).call(this);
